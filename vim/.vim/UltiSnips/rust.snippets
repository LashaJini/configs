snippet cp_path "Snippet: dashed file name to underscore named module"
#[path = "./${1}/${2}.rs"]
pub mod ${2/-/_/g};
endsnippet

snippet cp_input "Snippet: parse one line of user input"
let mut ${1:input} = String::new();

std::io::stdin()
	.read_line(&mut $1)
	.expect("failed to read line");
endsnippet

snippet map "Snippet: .map(...)"
.map(|${1}| ${2})
endsnippet

snippet main "main function"
fn main() {
	${0}
}
endsnippet

snippet let "let declaration"
let $1 = $2${3:;}
endsnippet

snippet letm "let mutable declaration"
let mut $1 = $2${3:;}
endsnippet

snippet fpr "snippet for println! with formatting"
println!("{${1:}}", $2)${3:;}
endsnippet

snippet efpr "snippet for eprintln! with formatting"
eprintln!("{${1:}}", $2)${3:;}
endsnippet

snippet pr "snippet for println!"
println!("${1}")${2:;}
endsnippet

snippet format "snippet for format!"
format!("${1:{}}", $2)${3:;}
endsnippet
